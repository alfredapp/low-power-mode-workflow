<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.alfredapp.lowpowermode</string>
	<key>connections</key>
	<dict>
		<key>09F16EEE-6DBF-4559-87E0-EBCF59F92293</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>5C73589E-A064-4326-84BA-8F9692C354A7</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>5C73589E-A064-4326-84BA-8F9692C354A7</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>60CC7FF3-E5C3-475F-92B3-A99EE4A8612C</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>5F671FDE-E06C-42F6-A4A0-EB735D77DDB3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>09F16EEE-6DBF-4559-87E0-EBCF59F92293</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>60CC7FF3-E5C3-475F-92B3-A99EE4A8612C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3902119C-BADD-48D6-8B69-403FF62B379B</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>6D410135-FACB-46E9-BFF1-DDDF2EB93B1E</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>09F16EEE-6DBF-4559-87E0-EBCF59F92293</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>9AE6437B-6EDF-477E-B93D-36248C0F804B</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>09F16EEE-6DBF-4559-87E0-EBCF59F92293</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>B23EAB9A-DD81-4931-9F5D-CF369CEBDB3D</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>09F16EEE-6DBF-4559-87E0-EBCF59F92293</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>E81609C2-D3E3-4040-8D9E-CBA2D4435912</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>09F16EEE-6DBF-4559-87E0-EBCF59F92293</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>F2F45E2B-849C-4612-BBEC-8814845257D0</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>09F16EEE-6DBF-4559-87E0-EBCF59F92293</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Toggle Low Power Mode for Battery or Power Adapter</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Low Power Mode</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>68</integer>
				<key>script</key>
				<string>ObjC.import("AppKit")

function launchPrefPane(pane) {
  const url = "x-apple.systempreferences:com.apple.preference." + pane
  const task = $.NSTask.alloc.init
  task.executableURL = $.NSURL.alloc.initFileURLWithPath("/usr/bin/open")
  task.arguments = ["-gj", url]
  task.launchAndReturnError(false)
}

function settingsApp() {
  try { return Application("System Settings") }
  catch { return Application("System Preferences") }
}

function run(argv) {
  const source = argv[0]
  const toggleTo = argv[1]

  const systemEvents = Application("System Events")
  const systemSettings = settingsApp()
  const settingsRunning = systemSettings.running()

  launchPrefPane("battery?" + source)

  delay(2) // Give the pane time to load

  // Checkbox and window name depend on system language
  const toggleCheckbox = (function() {
    const language = $.NSLocale.currentLocale.languageCode.js
    const windows = systemEvents.processes.byName("System Preferences").windows

    switch (language) {
      case "en": return windows.byName("Battery").groups[0].checkboxes.byName("Low power mode")
      case "de": return windows.byName("Batterie").groups[0].checkboxes.byName("Stromsparmodus")
      case "es": return windows.byName("Batería").groups[0].checkboxes.byName("Modo de bajo consumo")
      case "fr": return windows.byName("Batterie").groups[0].checkboxes.byName("Mode économie d’énergie")
      case "nl": return windows.byName("Batterij").groups[0].checkboxes.byName("Energiebesparingsmodus")
      case "pt": return windows.byName("Bateria").groups[0].checkboxes.byName("Modo de baixo consumo")
      default: return windows[0].groups[0].checkboxes[-1].click()
    }
  })()

  if (toggleCheckbox.value() === 0 &amp;&amp; toggleTo === "on" || toggleCheckbox.value() === 1 &amp;&amp; toggleTo === "off") toggleCheckbox.click()

  if (!settingsRunning) systemSettings.quit()
}</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>7</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>09F16EEE-6DBF-4559-87E0-EBCF59F92293</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<true/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>1</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>{var:status_keyword}</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Querying Low Power Mode status…</string>
				<key>script</key>
				<string>function runCommand(...arguments) {
  const task = $.NSTask.alloc.init
  const stdout = $.NSPipe.pipe

  task.executableURL = $.NSURL.alloc.initFileURLWithPath(arguments[0])
  task.arguments = arguments.slice(1)
  task.standardOutput = stdout
  task.launchAndReturnError(false)

  const dataOut = stdout.fileHandleForReading.readDataToEndOfFile
  const stringOut = $.NSString.alloc.initWithDataEncoding(dataOut, $.NSUTF8StringEncoding).js

  return stringOut
}

const power = runCommand("/usr/bin/pmset", "-g", "custom")
const batteryMatch = power.match(/(Battery) Power:.*?lowpowermode\s*(\d)\n/s) || undefined
const adapterMatch = power.match(/(AC) Power:.*?lowpowermode\s*(\d)\n/s) || undefined

const sfItems = [batteryMatch, adapterMatch].map(source =&gt; {
  if (source === undefined) return undefined

  const sourceName = source[1]
  const sourceArg = (function() {
    switch (sourceName) {
      case "Battery": return "battery"
      case "AC": return "adapter"
      default: throw "Invalid source: " + sourceName
    }
  })()

  const isOn = source[2] === "1"
  const currentState = isOn ? "On" : "Off"
  const toggleState = isOn ? "off" : "on"
  const icon = isOn ? "images/icon_" + sourceArg + "_on.png" : "images/icon_" + sourceArg + "_off.png"

  return {
    title: sourceName + "’s Low Power Mode is " + currentState,
    subtitle: "Action to turn it " + toggleState,
    arg: [sourceArg, toggleState],
    icon: { path: icon }
  }
}).filter(item =&gt; item !== undefined)

if (sfItems.length === 0) {
  JSON.stringify({ items: [{ title: 'No power sources found!', valid: false }] })
} else {
  JSON.stringify({ items: sfItems })
}</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>Toggle Low Power Mode</string>
				<key>type</key>
				<integer>7</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>5F671FDE-E06C-42F6-A4A0-EB735D77DDB3</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string>sw_vers -productVersion | cut -d. -f1 | tr -d '\n'</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>5</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>5C73589E-A064-4326-84BA-8F9692C354A7</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># Special values for OneUpdater reuse
readonly workflow_webaddress="$(/usr/libexec/PlistBuddy -c 'print webaddress' './info.plist')"
readonly workflow_repo="$(basename "$(dirname "${workflow_webaddress}")")/$(basename "${workflow_webaddress}")"

# THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="${workflow_webaddress}/raw/main/Workflow/info.plist"
readonly workflow_url="${workflow_repo}"
readonly download_type='github_release'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type d -name 'Notificator.app')"
  if [[ -n "${notificator}" ]]; then
    "${notificator}/Contents/Resources/Scripts/notificator" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  local -r terminal_notifier="$(find . -type f -name 'terminal-notifier')"
  if [[ -n "${terminal_notifier}" ]]; then
    "${terminal_notifier}" -title "${alfred_workflow_name}" -subtitle 'A new version is available' -message "${1}"
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  if ! url_exists "${remote_info_plist}"; then abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."; fi # Remote sanity check

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  download_url="$([[ "${download_type}" == 'github_release' ]] &amp;&amp; curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest" | grep 'browser_download_url' | head -1 | sed -E 's/.*browser_download_url": "(.*)"/\1/' || echo "${workflow_url}")"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    curl --silent --location --output "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow" "${download_url}"
    open "${HOME}/Downloads/${alfred_workflow_name}.alfredworkflow"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3902119C-BADD-48D6-8B69-403FF62B379B</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>conditions</key>
				<array>
					<dict>
						<key>inputstring</key>
						<string></string>
						<key>matchcasesensitive</key>
						<false/>
						<key>matchmode</key>
						<integer>3</integer>
						<key>matchstring</key>
						<string>13</string>
						<key>outputlabel</key>
						<string>Monterey or Below</string>
						<key>uid</key>
						<string>162C4049-4FA3-49CB-8E7E-9DC1B57AF737</string>
					</dict>
				</array>
				<key>elselabel</key>
				<string>Ventura or Above</string>
				<key>hideelse</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.conditional</string>
			<key>uid</key>
			<string>60CC7FF3-E5C3-475F-92B3-A99EE4A8612C</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>3</integer>
				<key>argumenttext</key>
				<string>battery|on</string>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>0</integer>
				<key>hotmod</key>
				<integer>0</integer>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>9AE6437B-6EDF-477E-B93D-36248C0F804B</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>3</integer>
				<key>argumenttext</key>
				<string>battery|off</string>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>0</integer>
				<key>hotmod</key>
				<integer>0</integer>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>6D410135-FACB-46E9-BFF1-DDDF2EB93B1E</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>3</integer>
				<key>argumenttext</key>
				<string>adapter|on</string>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>0</integer>
				<key>hotmod</key>
				<integer>0</integer>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>F2F45E2B-849C-4612-BBEC-8814845257D0</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>action</key>
				<integer>0</integer>
				<key>argument</key>
				<integer>3</integer>
				<key>argumenttext</key>
				<string>adapter|off</string>
				<key>focusedappvariable</key>
				<false/>
				<key>focusedappvariablename</key>
				<string></string>
				<key>hotkey</key>
				<integer>0</integer>
				<key>hotmod</key>
				<integer>0</integer>
				<key>leftcursor</key>
				<false/>
				<key>modsmode</key>
				<integer>0</integer>
				<key>relatedAppsMode</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.hotkey</string>
			<key>uid</key>
			<string>B23EAB9A-DD81-4931-9F5D-CF369CEBDB3D</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>availableviaurlhandler</key>
				<false/>
				<key>triggerid</key>
				<string>toggle</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>E81609C2-D3E3-4040-8D9E-CBA2D4435912</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>## Usage

Run the Status Keyword (default: `lpm`) to view the current state of and toggle Low Power Mode for either your battery or power adapter.

![Alfred results for lpm](images/about/lpm.png)

Configure the [Hotkey Triggers](https://www.alfredapp.com/help/workflows/triggers/hotkey/) for faster toggling.</string>
	<key>uidata</key>
	<dict>
		<key>09F16EEE-6DBF-4559-87E0-EBCF59F92293</key>
		<dict>
			<key>xpos</key>
			<real>260</real>
			<key>ypos</key>
			<real>40</real>
		</dict>
		<key>3902119C-BADD-48D6-8B69-403FF62B379B</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<real>750</real>
			<key>ypos</key>
			<real>40</real>
		</dict>
		<key>5C73589E-A064-4326-84BA-8F9692C354A7</key>
		<dict>
			<key>colorindex</key>
			<integer>5</integer>
			<key>note</key>
			<string>Major macOS version</string>
			<key>xpos</key>
			<real>430</real>
			<key>ypos</key>
			<real>40</real>
		</dict>
		<key>5F671FDE-E06C-42F6-A4A0-EB735D77DDB3</key>
		<dict>
			<key>note</key>
			<string>Interactive toggle</string>
			<key>xpos</key>
			<real>55</real>
			<key>ypos</key>
			<real>40</real>
		</dict>
		<key>60CC7FF3-E5C3-475F-92B3-A99EE4A8612C</key>
		<dict>
			<key>colorindex</key>
			<integer>5</integer>
			<key>note</key>
			<string>Only update on Ventura, due to new System Settings app</string>
			<key>xpos</key>
			<real>590</real>
			<key>ypos</key>
			<real>60</real>
		</dict>
		<key>6D410135-FACB-46E9-BFF1-DDDF2EB93B1E</key>
		<dict>
			<key>note</key>
			<string>Off for Battery</string>
			<key>xpos</key>
			<real>55</real>
			<key>ypos</key>
			<real>330</real>
		</dict>
		<key>9AE6437B-6EDF-477E-B93D-36248C0F804B</key>
		<dict>
			<key>note</key>
			<string>On for Battery</string>
			<key>xpos</key>
			<real>55</real>
			<key>ypos</key>
			<real>190</real>
		</dict>
		<key>B23EAB9A-DD81-4931-9F5D-CF369CEBDB3D</key>
		<dict>
			<key>note</key>
			<string>Off for AC Adapter</string>
			<key>xpos</key>
			<real>55</real>
			<key>ypos</key>
			<real>610</real>
		</dict>
		<key>E81609C2-D3E3-4040-8D9E-CBA2D4435912</key>
		<dict>
			<key>note</key>
			<string>For valid arguments, see the Hotkey Triggers</string>
			<key>xpos</key>
			<real>55</real>
			<key>ypos</key>
			<real>760</real>
		</dict>
		<key>F2F45E2B-849C-4612-BBEC-8814845257D0</key>
		<dict>
			<key>note</key>
			<string>On for AC Adapter</string>
			<key>xpos</key>
			<real>55</real>
			<key>ypos</key>
			<real>470</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>lpm</string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Status Keyword</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>status_keyword</string>
		</dict>
	</array>
	<key>version</key>
	<string>2022.6</string>
	<key>webaddress</key>
	<string>https://github.com/alfredapp/low-power-mode-workflow/</string>
</dict>
</plist>
